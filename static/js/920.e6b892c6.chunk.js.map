{"version":3,"file":"static/js/920.e6b892c6.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/TransactionsList/TransactionsList.styled.js","components/TransactionsList/TransactionsItem/TransactionsItem.jsx","components/TransactionsList/TransactionsList.jsx","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const size = {\n  mobile: '280px',\n  tablet: '768px',\n  desktop: '1280px',\n};\nexport const breakpoints = {\n  tablet: `(min-width: ${size.tablet})`,\n  desktop: `(min-width: ${size.desktop})`,\n};\n\nexport const ContainerStyle = styled.div`\n  min-width: ${size.mobile};\n  margin: 0 auto;\n  padding: ${({Size}) => Size === 'main' && '32px 0'};\n  @media screen and ${breakpoints.tablet} {\n    padding-top: 20px;\n  }\n\n  @media screen and ${breakpoints.desktop} {\n    width: ${({ Size }) => (Size === 'statistics' && '800px')};\n    padding: ${({ Size }) =>\n      (Size === 'main' && '46px 0 0 70px') ||\n      (Size === 'statistics' && '32px 0 0 54px')};\n  }\n`;\n\n//\n","import { ContainerStyle } from './Container.styled';\n\nexport const Container = ({ children, Size }) => {\n  return <ContainerStyle Size={Size}>{children}</ContainerStyle>;\n};","import styled from 'styled-components';\n\nexport const StyledTransactionsList = styled.div`\n  margin: 0 auto;\n  position: relative;\n  overflow-y: overlay;\n\n  // &.expense::before {\n  //   content: '';\n  //   position: absolute;\n  //   left: 0;\n  //   height: 300px;\n  //   width: 5px;\n  //   background-color: var(--dashboard-text);\n  // }\n\n  // &.income::before {\n  //   content: '';\n  //   position: absolute;\n  //   left: 0;\n  //   height: 300px;\n  //   width: 5px;\n  //   background-color: var(--yellow);\n  // }\n\n  // li {\n  //   height: 48px;\n  //   display: flex;\n  //   justify-content: space-between;\n  //   align-items: center;\n  //   position: relative;\n  // }\n\n  // li:nth-child(4) p {\n  //   text-align: right;\n  // }\n\n  // li:not(:last-child)::after {\n  //   content: '';\n  //   position: absolute;\n  //   left: -20px;\n  //   right: -20px;\n  //   bottom: -1px;\n  //   height: 1px;\n  //   border-bottom: 1px solid white;\n  //   opacity: 0.2;\n  // }\n\n  // li:last-child {\n  //   height: 53px;\n  // }\n\n  // &.expense li:nth-child(5) p {\n  //   font-weight: 600;\n  //   color: var(--dashboard-text);\n  //   text-align: right;\n  // }\n\n  // &.income li:nth-child(5) p {\n  //   font-weight: 600;\n  //   color: var(--yellow);\n  //   text-align: right;\n  // }\n\n  // b {\n  //   font-weight: 600;\n  //   margin-right: 27px;\n  // }\n\n  // button.edit {\n  //   width: 48px;\n  //   height: 24px;\n  //   background-color: transparent;\n  //   color: var(--white-60);\n  //   box-shadow: none;\n  // }\n\n  // button.edit:hover {\n  //   color: var(--white);\n  // }\n\n  // button.delete {\n  //   color: var(--white);\n  //   background: var(--gradient-button);\n  //   width: 69px;\n  //   height: 29px;\n  //   border-radius: 20px;\n  //   font-size: 14px;\n  //   box-shadow: var(--button-shadow);\n  // }\n\n  // @media only screen and (max-width: 767px) {\n  //   padding: 0 20px;\n  //   height: 293px;\n  //   margin-bottom: 8px;\n  //   border-radius: 10px;\n  //   height: 293px;\n  //   background: rgba(255, 255, 255, 0.1);\n\n  //   button.edit {\n  //     display: flex;\n  //     justify-content: space-between;\n  //   }\n  // }\n\n  // @media only screen and (min-width: 768px) {\n  //   display: block;\n  //   max-height: 318px;\n  //   overflow: auto;\n  //   width: 704px;\n  //   &::-webkit-scrollbar {\n  //     width: 8px;\n  //     border-radius: 4px;\n  //     background-color: #734aef;\n  //   }\n\n  //   &::-webkit-scrollbar-thumb {\n  //     background-color: var(--balance-background-color);\n  //     border-radius: 4px;\n  //   }\n\n  //   .income {\n  //     font-weight: 600;\n  //     color: var(--yellow);\n  //     text-align: right;\n  //   }\n  //   .expense {\n  //     font-weight: 600;\n  //     color: var(--dashboard-text);\n  //     text-align: right;\n  //   }\n\n  //   table {\n  //     width: 100%;\n  //     border-spacing: 0px;\n  //     border-collapse: collapse;\n  //     max-height: 308px;\n  //   }\n\n  //   thead {\n  //     height: 56px;\n  //     background-color: var(--balance-background-color);\n  //     backdrop-filter: var(--backdrop-filter);\n  //     position: sticky;\n  //     top: 0;\n  //     z-index: 2;\n  //   }\n\n  //   tbody {\n  //     max-height: 265px;\n  //     overflow: hidden;\n  //   }\n\n  //   th {\n  //     padding: 0;\n  //     font-weight: 600;\n  //     text-align: left;\n  //   }\n  //   th:first-child {\n  //     border-top-left-radius: 8px;\n  //     border-bottom-left-radius: 8px;\n  //     text-align: left;\n  //     padding-left: 20px;\n  //     width: 91px;\n  //   }\n\n  //   th:nth-child(2) {\n  //     text-align: center;\n  //   }\n\n  //   th:nth-child(3) {\n  //     width: 146px;\n  //   }\n\n  //   th:nth-child(4) {\n  //     width: 135px;\n  //   }\n\n  //   th:nth-child(5) {\n  //     text-align: right;\n  //   }\n\n  //   th:last-child {\n  //     border-top-right-radius: 8px;\n  //     border-bottom-right-radius: 8px;\n  //     width: 141px;\n  //   }\n\n  //   tbody {\n  //     font-size: 14px;\n  //   }\n\n  //   tr {\n  //     position: relative;\n  //     height: 53px;\n  //   }\n\n  //   tr:not(:last-child)::after {\n  //     content: '';\n  //     position: absolute;\n  //     left: 0;\n  //     right: 0;\n  //     bottom: -1px;\n  //     height: 1px;\n  //     border-bottom: 1px solid white;\n  //     opacity: 0.2;\n  //   }\n\n  //   td {\n  //     text-align: left;\n  //     padding: 0;\n  //   }\n\n  //   td:first-child {\n  //     padding-left: 20px;\n  //   }\n\n  //   td:nth-child(2) {\n  //     width: 123px;\n  //     text-align: center;\n  //   }\n\n  //   /* td:nth-child(4) {\n  //           text-transform: capitalize;\n  //       } */\n\n  //   td:last-child {\n  //     text-align: right;\n  //     padding-right: 6px;\n  //   }\n\n  //   button.edit {\n  //     width: 14px;\n  //     height: 14px;\n  //     margin-right: 8px;\n  //   }\n  // }\n\n\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  delTransactionThunk,\n  updTransactionThunk,\n} from 'redux/finance/financeThunks';\nimport { GoPencil } from 'react-icons/go';\nimport { useState } from 'react';\n\nexport const TransactionsItem = ({\n  id,\n  transactionDate,\n  type,\n  categoryId,\n  comment,\n  amount,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const dispatch = useDispatch();\n\n  const onDelete = transactionId => {\n    dispatch(delTransactionThunk(transactionId));\n  };\n\n  const handleUpdateTransaction = event => {\n    event.preventDefault();\n\n    const newTransactionDate =\n      event.currentTarget.elements.transactionDate.value;\n    const newType = event.currentTarget.elements.type.value;\n    const newComment = event.currentTarget.elements.comment.value;\n    const newAmount = event.currentTarget.elements.amount.value;\n\n    const updatedTransaction = {\n      transactionId: id,\n      transactionDate: newTransactionDate,\n      type: newType,\n      categoryId: categoryId,\n      comment: newComment,\n      amount: Number(newAmount),\n    };\n    dispatch(updTransactionThunk(updatedTransaction));\n  };\n\n  return (\n    <div>\n      <span>{transactionDate}</span> |<span>{type}</span> |\n      <span>{categoryId}</span> | <span>{comment}</span> | <span>{amount}</span>{' '}\n      |\n      <span>\n        <button onClick={() => setIsEditing(true)}>\n          <GoPencil />\n        </button>\n        <button onClick={() => onDelete(id)}>Delete</button>\n      </span>\n      {isEditing && (\n        <form onSubmit={handleUpdateTransaction}>\n          <button onClick={() => setIsEditing(false)}>&times;</button>\n          <label>\n            <span>Date:</span>\n            <input\n              defaultValue={transactionDate}\n              type=\"text\"\n              name=\"transactionDate\"\n            />\n          </label>\n          <label>\n            <span>Type:</span>\n            <input defaultValue={type} type=\"text\" name=\"type\" />\n          </label>\n          <label>\n            <span>Comment:</span>\n            <input defaultValue={comment} type=\"text\" name=\"comment\" />\n          </label>\n          <label>\n            <span>Amount:</span>\n            <input defaultValue={amount} type=\"text\" name=\"amount\" />\n          </label>\n          <button type=\"submit\">Update transaction</button>\n        </form>\n      )}\n    </div>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StyledTransactionsList } from './TransactionsList.styled';\nimport { TransactionsItem } from 'components/TransactionsList/TransactionsItem/TransactionsItem';\nimport {\n  createTransactionThunk,\n  fetchAllTransactionsThunk,\n  getTransactionCategoriesThunk,\n} from 'redux/finance/financeThunks';\n\nconst TransactionsList = () => {\n  const dispatch = useDispatch();\n  const transactions = useSelector(state => state.transactions.data);\n\n  useEffect(() => {\n    dispatch(fetchAllTransactionsThunk());\n    dispatch(getTransactionCategoriesThunk());\n  }, [dispatch]);\n\n  const onAddTransaction = () => {\n    dispatch(\n      createTransactionThunk({\n        transactionDate: '2023-09-28',\n        type: 'EXPENSE',\n        categoryId: '3caa7ba0-79c0-40b9-ae1f-de1af1f6e386',\n        comment: 'Car',\n        amount: -150,\n      })\n    );\n  };\n\n  return (\n    <StyledTransactionsList>\n      <button onClick={onAddTransaction}>Add test transaction</button>\n      {Array.isArray(transactions) && transactions.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Type</th>\n              <th>Category</th>\n              <th>Comment</th>\n              <th>Sum</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {transactions.map(\n              ({ id, transactionDate, type, categoryId, comment, amount }) => (\n                <TransactionsItem\n                  key={id}\n                  id={id}\n                  transactionDate={transactionDate}\n                  type={type}\n                  categoryId={categoryId}\n                  comment={comment}\n                  amount={amount}\n                />\n              )\n            )}\n          </tbody>\n        </table>\n      ) : (\n        <thead>There are no transactions added!</thead>\n      )}\n    </StyledTransactionsList>\n  );\n};\n\nTransactionsList.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      transactionDate: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      categoryId: PropTypes.string.isRequired,\n      comment: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default TransactionsList;\n","import { Container } from 'components/Container/Container';\nimport TransactionsList from 'components/TransactionsList/TransactionsList';\nimport React from 'react';\n\nconst Home = () => {\n  return (\n    <>\n      <Container Size=\"main\">\n        <TransactionsList />\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["size","breakpoints","tablet","concat","desktop","ContainerStyle","styled","_templateObject","_taggedTemplateLiteral","_ref","Size","_ref2","_ref3","Container","children","_jsx","StyledTransactionsList","TransactionsItem","id","transactionDate","type","categoryId","comment","amount","_useState","useState","_useState2","_slicedToArray","isEditing","setIsEditing","dispatch","useDispatch","_jsxs","onClick","GoPencil","transactionId","delTransactionThunk","onSubmit","event","preventDefault","newTransactionDate","currentTarget","elements","value","newType","newComment","newAmount","updatedTransaction","Number","updTransactionThunk","defaultValue","name","transactions","useSelector","state","data","useEffect","fetchAllTransactionsThunk","getTransactionCategoriesThunk","createTransactionThunk","Array","isArray","length","map","_Fragment","TransactionsList"],"sourceRoot":""}